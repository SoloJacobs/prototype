[project]
name = "prototype"
version = "0.1.0"
description = "The not so mergeable."
readme = "README.md"
requires-python = ">=3.12"
dependencies = ["psutil>=7.0.0"]

[project.scripts]
forward = "forward:main"
send-command = "send_command:main"

[tool.uv]
package = true
dev-dependencies = [
  "mypy",
  "pylsp-mypy>=0.6.9",
  "pytest>=8.3.4",
  "python-lsp-server>=1.12.0",
  "ruff>=0.8.1",
  "taplo>=0.9.3",
  "types-psutil>=7.0.0.20250401",
]

[tool.mypy]
mypy_path = "src"
packages = ["forward", "tests"]
warn_unused_configs = true
disallow_any_generics = true
disallow_any_expr = false
disallow_any_explicit = true
disallow_any_decorated = true
disallow_any_unimported = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
no_implicit_reexport = true
no_implicit_optional = true
strict_optional = true
strict_equality = true
extra_checks = true
disable_bytearray_promotion = true
disable_memoryview_promotion = true
enable_error_code = [
  "redundant-self",
  "redundant-expr",
  "possibly-undefined",
  "truthy-bool",
  "truthy-iterable",
  "ignore-without-code",
  "unused-awaitable",
  "explicit-override",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "benchmarks",
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F", "UP", "B", "I", "W", "SIM", "ARG001"]
ignore = ["E501"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = ["B"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = ["--import-mode=importlib"]
filterwarnings = ["error"]
